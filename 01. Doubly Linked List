#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;
    Node* prev;

    Node(int data){
        this-> data = data;
        this->next =  NULL;
        this->prev = NULL;
    }
     ~Node() {
        int val = this -> data;
        if(next != NULL) {
            delete next;
            next = NULL;
        }
        cout << "memory free for node with data "<< val << endl;
    }
};

void print(Node* head){
    Node* temp = head;
    while(temp != NULL){
        cout<<temp->data<<" ";
        temp =  temp->next;
    }
    cout<<endl;
}

int getLength(Node* head){
    int len = 0;
    Node* temp = head;
    while(temp != NULL){
        len++;
        temp =  temp->next;
    }
    return len;

}

void insertathead(Node* &head, Node* &tail, int data)
{
    if(head == NULL){
        Node* temp =  new Node(data);
        head = temp;
        tail =  temp;
    }
    else{
        Node* temp = new Node(data);
        temp-> next = head;
        head->prev = temp;
        head =  temp;
    }
}

void insertattail(Node* &head,  Node* &tail,  int data)
{
    if(head == NULL){
        Node* temp =  new Node(data);
        head = temp;
        tail = temp;
    }
    else
    {
        Node* temp = new Node(data);
        tail-> next = temp;
        temp->prev = tail;
        tail =  temp;
    }
}

void insertatposition(Node* &head, Node* &tail, int data, int pos){



    if(pos == 1){
        insertathead(head,tail,  data);
        return;
    }

    Node* temp = head;
    int cnt = 1;
    while(cnt < pos - 1){
        temp=  temp->next;
        cnt++;
    }
    if(temp -> next == NULL){
        insertattail(head, tail,data);
        return;
    }

    Node* noder = new Node(data);

    noder->next = temp->next;
    temp->next->prev =  noder;
    temp->next = noder;
    noder->prev = temp;


}

void deleteNode(int position, Node* & head) {

    //deleting first or start node
    if(position == 1) {
        Node* temp = head;
        temp -> next -> prev = NULL;
        head = temp ->next;
        temp -> next = NULL;
        delete temp;
    }
    else
    {
        //deleting any middle node or last node
        Node* curr = head;
        Node* prev = NULL;

        int cnt = 1;
        while(cnt < position) {
            prev = curr;
            curr = curr -> next;
            cnt++;
        }

        curr -> prev = NULL;
        prev -> next = curr -> next;
        curr -> next = NULL;

        delete curr;

    }
}

int main(){

    Node* head = NULL;
    Node* tail = NULL;

    getLength(head);
    print(head);


    insertathead(head, tail, 5);
    print(head);

    insertattail(head, tail, 15);
    print(head);

    insertattail(head, tail, 20);
    print(head);

    insertatposition(head, tail, 12, 2);
    print(head);

    deleteNode(1, head);
    print(head);

}
